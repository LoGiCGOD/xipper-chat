<%- include('layouts/header.ejs')%>

<h2 class="mb-4">Hi, <%= user.name %></h2>

<div class="row">
    <div class="col-md-4">
        <ul class="list-group">
            <% if (users.length > 0) { %>
                <% for (let i = 0; i < users.length; i++) { %>
                    <li class="list-group-item list-group-item-dark cursor-pointer user-list" data-id="<%=users[i]['_id']%>">
                        <img src="/<%= users[i].image %>" alt="" width="50px" height="50px">
                        <%= users[i].name %>
                        <% if(users[i].is_online == 1) { %>
                            <sup class="online-status" id="<%= users[i]._id %>-status">Online</sup>
                        <% } else { %>
                            <sup class="offline-status" id="<%= users[i]._id %>-status">Offline</sup>
                        <% } %>
                    </li>
                <% } %>
            <% } %>
        </ul>
    </div>
    <div class="col-md-8">
        <h3 class="start-head">Click on User to Chat</h3>
        <div class="chat-section">
            <div id="chat-container">
                
                
            </div>


            <form action="" id="chat-form">
                <input type="text" name="message" placeholder="Enter Message" id="message" class="border" required>
                <input type="submit" value="Submit" class="btn btn-primary">
            </form>
        </div>
    </div>
</div>

<script>
    var sender_id = '<%= user._id %>';   // global variable  //your userid when loggedin fetched from db becomes sender_id
    var receiver_id;                     // global variable  
    var socket = io('/user-namespace', {
        auth: { token: sender_id }            //whenever any user connects, authorize (token can be used in backend, ObjectID)
    });

    $(document).ready(function(){
        $('.user-list').click(function(){
            var userId = $(this).attr('data-id');
            receiver_id = userId;
            $('.start-head').hide();
            $('.chat-section').show();

            socket.emit('existsChat',{sender_id:sender_id,receiver_id:receiver_id});  //load existing chats
        });
    });

    // Update user's online status
    socket.on('getOnlineUser', function(data) {
        console.log('Online User:', data.user_id);
        var statusElement = $('#' + data.user_id + '-status');
        statusElement.text('Online');
        statusElement.removeClass('offline-status').addClass('online-status');
    });

    // Update user's offline status
    socket.on('getOfflineUser', function(data) {
        console.log('Offline User:', data.user_id);
        var statusElement = $('#' + data.user_id + '-status');
        statusElement.text('Offline');
        statusElement.removeClass('online-status').addClass('offline-status');
    });

    // Stop the page from refreshing after sending a message
    $('#chat-form').submit(function(event){
        event.preventDefault();

        var message = $('#message').val();

        $.ajax({
            url: '/save-chat',
            type: 'POST',
            data: { sender_id: sender_id, receiver_id: receiver_id, message: message },
            success: function(response){
                if (response.success){
                    console.log(response);
                    $('#message').val(''); // making the message box empty
                    let chat = response.data.message;
                    let html = `
                        <div class="current-user-chat">
                            <h5>`+chat+`</h5>
                        </div>
                    `;
                    $('#chat-container').append(html);
                    socket.emit('newChat', response.data); //after showing to the chatcontainer box send the msg to the receiver
                } else {
                    alert(response.msg);
                }
            }
        });
    });

    socket.on('loadNewChat', function(data){
        if (sender_id == data.receiver_id && receiver_id == data.sender_id) {
            let html = `
                <div class="distant-user-chat">
                    <h5>`+data.message+`</h5>
                </div>
            `;
            $('#chat-container').append(html);
        }
    });

    // Load old chats
    socket.on('loadChats', function(data){
        $('#chat-container').html('');  // switching users should remove chats ie refresh screen

        var chats = data.chats;
        let html = '';
        for(let x=0; x < chats.length ; x++){
            let addClass = '';
            if(chats[x]['sender_id'] == sender_id){      // if sender_id inside chats matches sender_id ie loggedin user
                addClass = 'current-user-chat'
            }
            else{
                addClass = 'distant-user-chat'
            }
            html += `
                <div class='`+addClass+`'>
                    <h5>`+chats[x]['message']+`</h5>
                </div>
            `; 
        }
        $('#chat-container').append(html);
    });
</script>



<%- include('layouts/footer.ejs')%>
